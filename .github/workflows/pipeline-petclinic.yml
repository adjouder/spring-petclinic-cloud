name: Petclinic CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Generate docker images
      run : mvn spring-boot:build-image --file pom.xml -X -Pk8s -DREPOSITORY_PREFIX=elfiadylclc
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME_EL }}
        password: ${{ secrets.DOCKER_PASSWORD_EL }}
    - name: push docker images
      run : ./scripts/pushImages.sh

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_2 }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_2 }}
        aws-region: eu-west-3

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Update kube config
      #run: aws eks update-kubeconfig --name petclinic_cluster
      run: |
        pwd & ls
        cat ./k8s/*.yaml | sed 's#\${REPOSITORY_PREFIX_EL}'"#${REPOSITORY_PREFIX_EL}#g" | > deploy.yaml

    - name: clean namespace 
      uses: kodermax/kubectl-aws-eks@main
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
        args: |
          delete --all pods --namespace=spring-petclinic
          
    - name: Initialization of namespace EKS
      uses: kodermax/kubectl-aws-eks@main
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
        args: |
          apply -f k8s/init-namespace/

    # il faut le faire uen seule fois pet-être pas dans un pipline ou alors vérifier l'existance avant
    #- name: Creation des secrets Amazon EKS
     # uses: kodermax/kubectl-aws-eks@main
      #env:
       #  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      #with:
      #  args: |
       #   create secret generic wavefront -n spring-petclinic --from-literal=wavefront-url=https://wavefront.surf --from-literal=wavefront-api-token=7380ef8d-a2ce-40a7-85b8-70d9d3fab32d


    - name: Initialization of deployment Amazon EKS
      uses: kodermax/kubectl-aws-eks@main
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
        args: |
          apply -f k8s/
          
    - name: add conf kub
      uses: kodermax/kubectl-aws-eks@main
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
        args: |
          config view --raw >~/.kube/config

    - name: test 1
      uses: kodermax/kubectl-aws-eks@main
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
        args: |
          apply -f https://k8s.io/examples/application/mysql/mysql-configmap.yaml
          
    - name: test 2
      uses: kodermax/kubectl-aws-eks@main
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
        args: |
          apply -f https://k8s.io/examples/application/mysql/mysql-services.yaml
          
    - name: test 3
      uses: kodermax/kubectl-aws-eks@main
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
        args: |
          apply -f https://k8s.io/examples/application/mysql/mysql-statefulset.yaml
                   
    - name: Settings up databases with helm install repo
      uses: kodermax/kubectl-aws-eks@main
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
        args: |
          apply -f k8s/mysql-pv.yaml

    - name: Settings up databases with helm install repo step 2
      uses: kodermax/kubectl-aws-eks@main
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
        args: |
          apply -f k8s/mysql-deployment.yaml
          
    - name: Initialization of services Amazon EKS 
      uses: kodermax/kubectl-aws-eks@main
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
        args: |
          apply -f k8s/init-services
          
    - name: get api 
      uses: kodermax/kubectl-aws-eks@main
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_EL }}
      with:
        args: |
          get svc -n spring-petclinic api-gateway 
